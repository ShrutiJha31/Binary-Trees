class Solution {
public:
    vector<string>ans;
    void dfs(TreeNode *root, string str)
    {
        
        str+="->"+to_string(root->val);
        
        if(!root->left&&!root->right)
        {
            ans.push_back(str);
            return;
        }
        if(root->left)
            dfs(root->left,str);
        if(root->right)
            dfs(root->right,str);
    }
    vector<string> binaryTreePaths(TreeNode* root) {
        
        string str=""+to_string(root->val);
         if(!root->left&&!root->right)
        {
            ans.push_back(str);
            return ans;
        }
         if(root->left)
            dfs(root->left,str);
        if(root->right)
            dfs(root->right,str);
        return ans;
        
    }
};
